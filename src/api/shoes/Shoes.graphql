type Shoe {
  _id: ID!
  email: String!
  verifiedEmail: Boolean!
  brand: String!
  model: String!
  isFemaleShoe: Boolean!
  isTrailShoe: Boolean!
  size: Float!
  kilometers: Float!
  country: String!
  city: String
  images: [String]
  available: Boolean!
  ships: Boolean!
  intShipping: Boolean
  paidShipping: Boolean
}

input ShoeInput {
  email: String!
  brand: String!
  model: String!
  isFemaleShoe: Boolean
  isTrailShoe: Boolean
  size: Float!
  kilometers: Float!
  country: String!
  city: String
  images: [String]
  ships: Boolean!
  intShipping: Boolean
  paidShipping: Boolean
}

type Query {
  shoes: [Shoe]
  shoeById(id: ID): Shoe
  shoeByBrand(brand: String): [Shoe]
}

type Mutation {
  addShoe(shoe: ShoeInput): CreateShoeResponse!
}

type CreateShoeResponse {
  success: Boolean!
  message: String
  shoe: Shoe!
}